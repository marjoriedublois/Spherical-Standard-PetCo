import roboticstoolbox as rtb
import numpy as np
from roboticstoolbox import DHRobot, RevoluteDH, PrismaticDH
import matplotlib.pyplot as plt

# link lengths in mm
a1 = float(input("a1 = ")) # For testing, 150 mm
a2 = float(input("a2 = ")) # For testing, 30 mm
a3 = float(input("a3 = ")) # For testing, 10 mm

# link converted to meters
def mm_to_meter(a):
    m = 1000 # 1 meter = 1000 mm
    return a/m

a1 = mm_to_meter(a1)
a2 = mm_to_meter(a2)
a3 = mm_to_meter(a3)

# link limits converted to meters
lm3 = float(input("lm3 = ")) # 30mm
lm3 = mm_to_meter(lm3)

# Create Links
# [robot variable]=DHRobot([RevoluteDH(d,r/a,alpha,offset)])
Sphe_Standard = DHRobot([
    RevoluteDH(a1,0,(90/180)*np.pi,0,qlim=[(-90/180)*np.pi,(90/180)*np.pi]),
    RevoluteDH(0,0,(90/180)*np.pi,(90/180)*np.pi,qlim=[(-20/180)*np.pi,(90/180)*np.pi]),
    PrismaticDH(0,0,0,a2+a3,qlim=[0,lm3]),
], name='Spherical')

print(Sphe_Standard)

Sphe_Standard.teach(jointlabels=1)